	private Community putToCollectionIt(Graph G, Node[] nodes, boolean[] vist, int i) {
		Stack<Integer> s = new Stack<Integer>();
		Community c = new Community();
		vist[i] = true;
	
		s.push(i);
		while (!s.isEmpty()) {
			int j = s.peek();
			c.addNode(nodes[j]);
			s.pop();
			Collection<Edge> adjEdgesSet = G.getAdjacencyList(nodes[j]);
			for (Edge e : adjEdgesSet) {
				Node adjNode = e.getNeighbor(nodes[j]);
				int k = java.util.Arrays.asList(nodes).indexOf(adjNode);
				if (!vist[k] && e.isValid()) {
					vist[k] = true;
					s.push(k);
				}
			}
		}
		return c;
	}

	private CommunityCollection putToCollection(Graph G, Node[] nodes) {
		int nodeCount = G.getOrder();
		CommunityCollection cc = new CommunityCollection();

		boolean[] vist = new boolean[nodeCount];
		Arrays.fill(vist, false);

		for (int i = 0; i < nodeCount; ++i) {
			if (!vist[i]) {
				cc.addCommunity(putToCollectionIt(G, nodes, vist, i));
			}
		}
		return cc;
	}
